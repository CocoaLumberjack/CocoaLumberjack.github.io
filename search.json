{"Functions.html#/c:@F@DDExtractFileNameWithoutExtension":{"name":"DDExtractFileNameWithoutExtension","abstract":"<p>Extracts just the file name, no path or extension</p>"},"Functions.html#/c:DDTTYLogger.h@F@DDMakeColor":{"name":"DDMakeColor","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:DDTTYLogger.h@T@DDColor":{"name":"DDColor","abstract":"<p>Undocumented</p>"},"Protocols/DDRegisteredDynamicLogging.html#/c:objc(pl)DDRegisteredDynamicLogging(cpy)ddLogLevel":{"name":"ddLogLevel","abstract":"<p>Implement these methods to allow a file&rsquo;s log level to be managed from a central location.</p>","parent_name":"DDRegisteredDynamicLogging"},"Protocols/DDLogFormatter.html#/c:objc(pl)DDLogFormatter(im)formatLogMessage:":{"name":"-formatLogMessage:","abstract":"<p>Formatters may optionally be added to any logger.","parent_name":"DDLogFormatter"},"Protocols/DDLogFormatter.html#/c:objc(pl)DDLogFormatter(im)didAddToLogger:":{"name":"-didAddToLogger:","abstract":"<p>A single formatter instance can be added to multiple loggers.","parent_name":"DDLogFormatter"},"Protocols/DDLogFormatter.html#/c:objc(pl)DDLogFormatter(im)didAddToLogger:inQueue:":{"name":"-didAddToLogger:inQueue:","parent_name":"DDLogFormatter"},"Protocols/DDLogFormatter.html#/c:objc(pl)DDLogFormatter(im)willRemoveFromLogger:":{"name":"-willRemoveFromLogger:","abstract":"<p>See the above description for <code>didAddToLogger:</code></p>","parent_name":"DDLogFormatter"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(im)logMessage:":{"name":"-logMessage:","abstract":"<p>The log message method</p>","parent_name":"DDLogger"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(py)logFormatter":{"name":"logFormatter","abstract":"<p>Formatters may optionally be added to any logger.</p>","parent_name":"DDLogger"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(im)didAddLogger":{"name":"-didAddLogger","abstract":"<p>Since logging is asynchronous, adding and removing loggers is also asynchronous.","parent_name":"DDLogger"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(im)didAddLoggerInQueue:":{"name":"-didAddLoggerInQueue:","abstract":"<p>Since logging is asynchronous, adding and removing loggers is also asynchronous.","parent_name":"DDLogger"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(im)willRemoveLogger":{"name":"-willRemoveLogger","abstract":"<p>See the above description for <code>didAddLoger</code></p>","parent_name":"DDLogger"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(im)flush":{"name":"-flush","abstract":"<p>Some loggers may buffer IO for optimization purposes.","parent_name":"DDLogger"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(py)loggerQueue":{"name":"loggerQueue","abstract":"<p>Each logger is executed concurrently with respect to the other loggers.","parent_name":"DDLogger"},"Protocols/DDLogger.html#/c:objc(pl)DDLogger(py)loggerName":{"name":"loggerName","abstract":"<p>If the logger implementation does not choose to provide its own queue,","parent_name":"DDLogger"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)maximumNumberOfLogFiles":{"name":"maximumNumberOfLogFiles","abstract":"<p>The maximum number of archived log files to keep on disk.","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)logFilesDiskQuota":{"name":"logFilesDiskQuota","abstract":"<p>The maximum space that logs can take. On rolling logfile all old logfiles that exceed logFilesDiskQuota will","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)logsDirectory":{"name":"logsDirectory","abstract":"<p>Returns the logs directory (path)</p>","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)unsortedLogFilePaths":{"name":"unsortedLogFilePaths","abstract":"<p>Returns an array of <code>NSString</code> objects,","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)unsortedLogFileNames":{"name":"unsortedLogFileNames","abstract":"<p>Returns an array of <code>NSString</code> objects,","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)unsortedLogFileInfos":{"name":"unsortedLogFileInfos","abstract":"<p>Returns an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DDLogFileInfo.html\">DDLogFileInfo</a></code> objects,","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)sortedLogFilePaths":{"name":"sortedLogFilePaths","abstract":"<p>Just like the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)unsortedLogFilePaths\">unsortedLogFilePaths</a></code> method, but sorts the array.","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)sortedLogFileNames":{"name":"sortedLogFileNames","abstract":"<p>Just like the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)unsortedLogFileNames\">unsortedLogFileNames</a></code> method, but sorts the array.","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)sortedLogFileInfos":{"name":"sortedLogFileInfos","abstract":"<p>Just like the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(py)unsortedLogFileInfos\">unsortedLogFileInfos</a></code> method, but sorts the array.","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(im)createNewLogFile":{"name":"-createNewLogFile","abstract":"<p>Generates a new unique log file path, and creates the corresponding log file.</p>","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(im)didArchiveLogFile:":{"name":"-didArchiveLogFile:","abstract":"<p>Called when a log file was archieved</p>","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html#/c:objc(pl)DDLogFileManager(im)didRollAndArchiveLogFile:":{"name":"-didRollAndArchiveLogFile:","abstract":"<p>Called when the roll action was executed and the log was archieved</p>","parent_name":"DDLogFileManager"},"Protocols/DDLogFileManager.html":{"name":"DDLogFileManager","abstract":"<p>The LogFileManager protocol is designed to allow you to control all aspects of your log files.</p>"},"Protocols/DDLogger.html":{"name":"DDLogger","abstract":"<p>This protocol describes a basic logger behavior."},"Protocols/DDLogFormatter.html":{"name":"DDLogFormatter","abstract":"<p>This protocol describes the behavior of a log formatter</p>"},"Protocols/DDRegisteredDynamicLogging.html":{"name":"DDRegisteredDynamicLogging","abstract":"<p>This protocol describes a dynamic logging component</p>"},"Enums/DDLogMessageOptions.html#/c:@E@DDLogMessageOptions@DDLogMessageCopyFile":{"name":"DDLogMessageCopyFile","abstract":"<p>Use this to use a copy of the file path</p>","parent_name":"DDLogMessageOptions"},"Enums/DDLogMessageOptions.html#/c:@E@DDLogMessageOptions@DDLogMessageCopyFunction":{"name":"DDLogMessageCopyFunction","abstract":"<p>Use this to use a copy of the function name</p>","parent_name":"DDLogMessageOptions"},"Enums/DDLogMessageOptions.html#/c:@E@DDLogMessageOptions@DDLogMessageDontCopyMessage":{"name":"DDLogMessageDontCopyMessage","abstract":"<p>Use this to use avoid a copy of the message</p>","parent_name":"DDLogMessageOptions"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelOff":{"name":"DDLogLevelOff","abstract":"<p>No logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelError":{"name":"DDLogLevelError","abstract":"<p>Error logs only</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelWarning":{"name":"DDLogLevelWarning","abstract":"<p>Error and warning logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelInfo":{"name":"DDLogLevelInfo","abstract":"<p>Error, warning and info logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelDebug":{"name":"DDLogLevelDebug","abstract":"<p>Error, warning, info and debug logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelVerbose":{"name":"DDLogLevelVerbose","abstract":"<p>Error, warning, info, debug and verbose logs</p>","parent_name":"DDLogLevel"},"Enums/DDLogLevel.html#/c:@E@DDLogLevel@DDLogLevelAll":{"name":"DDLogLevelAll","abstract":"<p>All logs (1&hellip;11111)</p>","parent_name":"DDLogLevel"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagError":{"name":"DDLogFlagError","abstract":"<p>0&hellip;00001 DDLogFlagError</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagWarning":{"name":"DDLogFlagWarning","abstract":"<p>0&hellip;00010 DDLogFlagWarning</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagInfo":{"name":"DDLogFlagInfo","abstract":"<p>0&hellip;00100 DDLogFlagInfo</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagDebug":{"name":"DDLogFlagDebug","abstract":"<p>0&hellip;01000 DDLogFlagDebug</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html#/c:@E@DDLogFlag@DDLogFlagVerbose":{"name":"DDLogFlagVerbose","abstract":"<p>0&hellip;10000 DDLogFlagVerbose</p>","parent_name":"DDLogFlag"},"Enums/DDLogFlag.html":{"name":"DDLogFlag","abstract":"<p>Flags accompany each log. They are used together with levels to filter out logs.</p>"},"Enums/DDLogLevel.html":{"name":"DDLogLevel","abstract":"<p>Log levels are used to filter out logs. Used together with flags.</p>"},"Enums/DDLogMessageOptions.html":{"name":"DDLogMessageOptions","abstract":"<p>Log message options, allow copying certain log elements</p>"},"Constants.html#/c:@kDDASLKeyDDLog":{"name":"kDDASLKeyDDLog","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@kDDASLDDLogValue":{"name":"kDDASLDDLogValue","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@kDDDefaultLogMaxFileSize":{"name":"kDDDefaultLogMaxFileSize","abstract":"<p>This class provides a logger to write log statements to a file.</p>"},"Constants.html#/c:@kDDDefaultLogRollingFrequency":{"name":"kDDDefaultLogRollingFrequency","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@kDDDefaultLogMaxNumLogFiles":{"name":"kDDDefaultLogMaxNumLogFiles","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@kDDDefaultLogFilesDiskQuota":{"name":"kDDDefaultLogFilesDiskQuota","abstract":"<p>Undocumented</p>"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(cpy)sharedInstance":{"name":"sharedInstance","abstract":"<p>Singleton method</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(py)colorsEnabled":{"name":"colorsEnabled","abstract":"<p>Want to use different colors for different log levels?","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(py)automaticallyAppendNewlineForCustomFormatters":{"name":"automaticallyAppendNewlineForCustomFormatters","abstract":"<p>When using a custom formatter you can set the <code>logMessage</code> method not to append","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)setForegroundColor:backgroundColor:forFlag:":{"name":"-setForegroundColor:backgroundColor:forFlag:","abstract":"<p>The default color set (foregroundColor, backgroundColor) is:</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)setForegroundColor:backgroundColor:forFlag:context:":{"name":"-setForegroundColor:backgroundColor:forFlag:context:","abstract":"<p>Just like setForegroundColor:backgroundColor:flag, but allows you to specify a particular logging context.</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)setForegroundColor:backgroundColor:forTag:":{"name":"-setForegroundColor:backgroundColor:forTag:","abstract":"<p>Similar to the methods above, but allows you to map DDLogMessage-&gt;tag to a particular color profile.","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)clearColorsForFlag:":{"name":"-clearColorsForFlag:","abstract":"<p>Clearing color profiles.</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)clearColorsForFlag:context:":{"name":"-clearColorsForFlag:context:","abstract":"<p>Undocumented</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)clearColorsForTag:":{"name":"-clearColorsForTag:","abstract":"<p>Undocumented</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)clearColorsForAllFlags":{"name":"-clearColorsForAllFlags","abstract":"<p>Undocumented</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)clearColorsForAllTags":{"name":"-clearColorsForAllTags","abstract":"<p>Undocumented</p>","parent_name":"DDTTYLogger"},"Classes/DDTTYLogger.html#/c:objc(cs)DDTTYLogger(im)clearAllColors":{"name":"-clearAllColors","abstract":"<p>Undocumented</p>","parent_name":"DDTTYLogger"},"Classes/DDOSLogger.html#/c:objc(cs)DDOSLogger(cpy)sharedInstance":{"name":"sharedInstance","abstract":"<p>Singleton method</p>","parent_name":"DDOSLogger"},"Classes/DDLoggerInformation.html#/c:objc(cs)DDLoggerInformation(py)logger":{"name":"logger","abstract":"<p>Undocumented</p>","parent_name":"DDLoggerInformation"},"Classes/DDLoggerInformation.html#/c:objc(cs)DDLoggerInformation(py)level":{"name":"level","abstract":"<p>Undocumented</p>","parent_name":"DDLoggerInformation"},"Classes/DDLoggerInformation.html#/c:objc(cs)DDLoggerInformation(cm)informationWithLogger:andLevel:":{"name":"+informationWithLogger:andLevel:","abstract":"<p>Undocumented</p>","parent_name":"DDLoggerInformation"},"Classes/DDAbstractLogger.html#/c:objc(cs)DDAbstractLogger@_logFormatter":{"name":"_logFormatter","abstract":"<p>Undocumented</p>","parent_name":"DDAbstractLogger"},"Classes/DDAbstractLogger.html#/c:objc(cs)DDAbstractLogger@_loggerQueue":{"name":"_loggerQueue","abstract":"<p>Undocumented</p>","parent_name":"DDAbstractLogger"},"Classes/DDAbstractLogger.html#/c:objc(cs)DDAbstractLogger(py)logFormatter":{"name":"logFormatter","abstract":"<p>Undocumented</p>","parent_name":"DDAbstractLogger"},"Classes/DDAbstractLogger.html#/c:objc(cs)DDAbstractLogger(py)loggerQueue":{"name":"loggerQueue","abstract":"<p>Undocumented</p>","parent_name":"DDAbstractLogger"},"Classes/DDAbstractLogger.html#/c:objc(cs)DDAbstractLogger(py)onGlobalLoggingQueue":{"name":"onGlobalLoggingQueue","abstract":"<p>Return YES if the current logger uses a global queue for logging</p>","parent_name":"DDAbstractLogger"},"Classes/DDAbstractLogger.html#/c:objc(cs)DDAbstractLogger(py)onInternalLoggerQueue":{"name":"onInternalLoggerQueue","abstract":"<p>Return YES if the current logger uses the internal designated queue for logging</p>","parent_name":"DDAbstractLogger"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_message":{"name":"_message","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_level":{"name":"_level","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_flag":{"name":"_flag","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_context":{"name":"_context","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_file":{"name":"_file","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_fileName":{"name":"_fileName","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_function":{"name":"_function","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_line":{"name":"_line","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_tag":{"name":"_tag","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_options":{"name":"_options","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_timestamp":{"name":"_timestamp","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_threadID":{"name":"_threadID","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_threadName":{"name":"_threadName","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage@_queueLabel":{"name":"_queueLabel","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(im)init":{"name":"-init","abstract":"<p>Default <code>init</code> for empty messages.</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(im)initWithMessage:level:flag:context:file:function:line:tag:options:timestamp:":{"name":"-initWithMessage:level:flag:context:file:function:line:tag:options:timestamp:","abstract":"<p>Standard init method for a log message object.","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)message":{"name":"message","abstract":"<p>The log message</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)level":{"name":"level","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)flag":{"name":"flag","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)context":{"name":"context","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)file":{"name":"file","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)fileName":{"name":"fileName","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)function":{"name":"function","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)line":{"name":"line","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)tag":{"name":"tag","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)options":{"name":"options","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)timestamp":{"name":"timestamp","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)threadID":{"name":"threadID","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)threadName":{"name":"threadName","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLogMessage.html#/c:objc(cs)DDLogMessage(py)queueLabel":{"name":"queueLabel","abstract":"<p>Undocumented</p>","parent_name":"DDLogMessage"},"Classes/DDLog.html#/c:objc(cs)DDLog(cpy)sharedInstance":{"name":"sharedInstance","abstract":"<p>Returns the singleton <code>DDLog</code>.","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cpy)loggingQueue":{"name":"loggingQueue","abstract":"<p>Provides access to the underlying logging queue.","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)log:level:flag:context:file:function:line:tag:format:":{"name":"+log:level:flag:context:file:function:line:tag:format:","abstract":"<p>Logging Primitive.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)log:level:flag:context:file:function:line:tag:format:":{"name":"-log:level:flag:context:file:function:line:tag:format:","abstract":"<p>Logging Primitive.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)log:level:flag:context:file:function:line:tag:format:args:":{"name":"+log:level:flag:context:file:function:line:tag:format:args:","abstract":"<p>Logging Primitive.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)log:level:flag:context:file:function:line:tag:format:args:":{"name":"-log:level:flag:context:file:function:line:tag:format:args:","abstract":"<p>Logging Primitive.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)log:message:":{"name":"+log:message:","abstract":"<p>Logging Primitive.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)log:message:":{"name":"-log:message:","abstract":"<p>Logging Primitive.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)flushLog":{"name":"+flushLog","abstract":"<p>Since logging can be asynchronous, there may be times when you want to flush the logs.","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)flushLog":{"name":"-flushLog","abstract":"<p>Since logging can be asynchronous, there may be times when you want to flush the logs.","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)addLogger:":{"name":"+addLogger:","abstract":"<p>Adds the logger to the system.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)addLogger:":{"name":"-addLogger:","abstract":"<p>Adds the logger to the system.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)addLogger:withLevel:":{"name":"+addLogger:withLevel:","abstract":"<p>Adds the logger to the system.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)addLogger:withLevel:":{"name":"-addLogger:withLevel:","abstract":"<p>Adds the logger to the system.</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)removeLogger:":{"name":"+removeLogger:","abstract":"<p>Remove the logger from the system</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)removeLogger:":{"name":"-removeLogger:","abstract":"<p>Remove the logger from the system</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)removeAllLoggers":{"name":"+removeAllLoggers","abstract":"<p>Remove all the current loggers</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(im)removeAllLoggers":{"name":"-removeAllLoggers","abstract":"<p>Remove all the current loggers</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cpy)allLoggers":{"name":"allLoggers","abstract":"<p>Return all the current loggers</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(py)allLoggers":{"name":"allLoggers","abstract":"<p>Return all the current loggers</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cpy)allLoggersWithLevel":{"name":"allLoggersWithLevel","abstract":"<p>Return all the current loggers with their level (aka DDLoggerInformation).</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(py)allLoggersWithLevel":{"name":"allLoggersWithLevel","abstract":"<p>Return all the current loggers with their level (aka DDLoggerInformation).</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cpy)registeredClasses":{"name":"registeredClasses","abstract":"<p>Returns an array with the classes that are using registered dynamic logging</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cpy)registeredClassNames":{"name":"registeredClassNames","abstract":"<p>Returns an array with the classes names that are using registered dynamic logging</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)levelForClass:":{"name":"+levelForClass:","abstract":"<p>Returns the current log level for a certain class</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)levelForClassWithName:":{"name":"+levelForClassWithName:","abstract":"<p>Returns the current log level for a certain class</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)setLevel:forClass:":{"name":"+setLevel:forClass:","abstract":"<p>Set the log level for a certain class</p>","parent_name":"DDLog"},"Classes/DDLog.html#/c:objc(cs)DDLog(cm)setLevel:forClassWithName:":{"name":"+setLevel:forClassWithName:","abstract":"<p>Set the log level for a certain class</p>","parent_name":"DDLog"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)filePath":{"name":"filePath","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)fileName":{"name":"fileName","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)fileAttributes":{"name":"fileAttributes","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)creationDate":{"name":"creationDate","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)modificationDate":{"name":"modificationDate","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)fileSize":{"name":"fileSize","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)age":{"name":"age","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(py)isArchived":{"name":"isArchived","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(cm)logFileWithPath:":{"name":"+logFileWithPath:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)initWithFilePath:":{"name":"-initWithFilePath:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)reset":{"name":"-reset","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)renameFile:":{"name":"-renameFile:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)hasExtendedAttributeWithName:":{"name":"-hasExtendedAttributeWithName:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)addExtendedAttributeWithName:":{"name":"-addExtendedAttributeWithName:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)removeExtendedAttributeWithName:":{"name":"-removeExtendedAttributeWithName:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)reverseCompareByCreationDate:":{"name":"-reverseCompareByCreationDate:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDLogFileInfo.html#/c:objc(cs)DDLogFileInfo(im)reverseCompareByModificationDate:":{"name":"-reverseCompareByModificationDate:","abstract":"<p>Undocumented</p>","parent_name":"DDLogFileInfo"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger@_currentLogFileInfo":{"name":"_currentLogFileInfo","abstract":"<p>Undocumented</p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)init":{"name":"-init","abstract":"<p>Default initializer</p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)initWithLogFileManager:":{"name":"-initWithLogFileManager:","abstract":"<p>Designated initializer, requires a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DDLogFileManager.html\">DDLogFileManager</a></code> instance</p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)willLogMessage":{"name":"-willLogMessage","abstract":"<p>Called when the logger is about to write message. Call super before your implementation.</p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)didLogMessage":{"name":"-didLogMessage","abstract":"<p>Called when the logger wrote message. Call super after your implementation.</p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)flush":{"name":"-flush","abstract":"<p>Writes all in-memory log data to the permanent storage. Call super before your implementation.</p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)shouldArchiveRecentLogFileInfo:":{"name":"-shouldArchiveRecentLogFileInfo:","abstract":"<p>Called when the logger checks archive or not current log file.","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)maximumFileSize":{"name":"maximumFileSize","abstract":"<p>Log File Rolling:</p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)rollingFrequency":{"name":"rollingFrequency","abstract":"<p>See description for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)maximumFileSize\">maximumFileSize</a></code></p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)doNotReuseLogFiles":{"name":"doNotReuseLogFiles","abstract":"<p>See description for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)maximumFileSize\">maximumFileSize</a></code></p>","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)logFileManager":{"name":"logFileManager","abstract":"<p>The DDLogFileManager instance can be used to retrieve the list of log files,","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)automaticallyAppendNewlineForCustomFormatters":{"name":"automaticallyAppendNewlineForCustomFormatters","abstract":"<p>When using a custom formatter you can set the <code>logMessage</code> method not to append","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)rollLogFileWithCompletionBlock:":{"name":"-rollLogFileWithCompletionBlock:","abstract":"<p>You can optionally force the current log file to be rolled with this method.","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(im)rollLogFile":{"name":"-rollLogFile","abstract":"<p>Method is deprecated.","parent_name":"DDFileLogger"},"Classes/DDFileLogger.html#/c:objc(cs)DDFileLogger(py)currentLogFileInfo":{"name":"currentLogFileInfo","abstract":"<p>Returns the log file that should be used.","parent_name":"DDFileLogger"},"Classes/DDLogFileFormatterDefault.html#/c:objc(cs)DDLogFileFormatterDefault(im)init":{"name":"-init","abstract":"<p>Default initializer</p>","parent_name":"DDLogFileFormatterDefault"},"Classes/DDLogFileFormatterDefault.html#/c:objc(cs)DDLogFileFormatterDefault(im)initWithDateFormatter:":{"name":"-initWithDateFormatter:","abstract":"<p>Designated initializer, requires a date formatter</p>","parent_name":"DDLogFileFormatterDefault"},"Classes/DDLogFileManagerDefault.html#/c:objc(cs)DDLogFileManagerDefault(im)init":{"name":"-init","abstract":"<p>Default initializer</p>","parent_name":"DDLogFileManagerDefault"},"Classes/DDLogFileManagerDefault.html#/c:objc(cs)DDLogFileManagerDefault(im)initWithLogsDirectory:":{"name":"-initWithLogsDirectory:","abstract":"<p>Designated initialized, requires the logs directory</p>","parent_name":"DDLogFileManagerDefault"},"Classes/DDLogFileManagerDefault.html#/c:objc(cs)DDLogFileManagerDefault(py)newLogFileName":{"name":"newLogFileName","abstract":"<p>Generates log file name with default format <code>&quot;&lt;bundle identifier&gt; &lt;date&gt; &lt;time&gt;.log&quot;</code>","parent_name":"DDLogFileManagerDefault"},"Classes/DDLogFileManagerDefault.html#/c:objc(cs)DDLogFileManagerDefault(im)isLogFile:":{"name":"-isLogFile:","abstract":"<p>Default log file name is <code>&quot;&lt;bundle identifier&gt; &lt;date&gt; &lt;time&gt;.log&quot;</code>.","parent_name":"DDLogFileManagerDefault"},"Classes/DDASLLogger.html#/c:objc(cs)DDASLLogger(cpy)sharedInstance":{"name":"sharedInstance","abstract":"<p>Singleton method</p>","parent_name":"DDASLLogger"},"Classes/DDASLLogCapture.html#/c:objc(cs)DDASLLogCapture(cm)start":{"name":"+start","abstract":"<p>Start capturing logs</p>","parent_name":"DDASLLogCapture"},"Classes/DDASLLogCapture.html#/c:objc(cs)DDASLLogCapture(cm)stop":{"name":"+stop","abstract":"<p>Stop capturing logs</p>","parent_name":"DDASLLogCapture"},"Classes/DDASLLogCapture.html#/c:objc(cs)DDASLLogCapture(cpy)captureLevel":{"name":"captureLevel","abstract":"<p>The current capture level.</p>","parent_name":"DDASLLogCapture"},"Classes/DDASLLogCapture.html":{"name":"DDASLLogCapture","abstract":"<p>This class provides the ability to capture the ASL (Apple System Logs)</p>"},"Classes/DDASLLogger.html":{"name":"DDASLLogger","abstract":"<p>This class provides a logger for the Apple System Log facility.</p>"},"Classes/DDLogFileManagerDefault.html":{"name":"DDLogFileManagerDefault","abstract":"<p>Default log file manager.</p>"},"Classes/DDLogFileFormatterDefault.html":{"name":"DDLogFileFormatterDefault","abstract":"<p>Most users will want file log messages to be prepended with the date and time."},"Classes/DDFileLogger.html":{"name":"DDFileLogger","abstract":"<p>The standard implementation for a file logger</p>"},"Classes/DDLogFileInfo.html":{"name":"DDLogFileInfo","abstract":"<p><code>DDLogFileInfo</code> is a simple class that provides access to various file attributes."},"Classes/DDLog.html":{"name":"DDLog","abstract":"<p>The main class, exposes all logging mechanisms, loggers, &hellip;"},"Classes/DDLogMessage.html":{"name":"DDLogMessage","abstract":"<p>The <code>DDLogMessage</code> class encapsulates information about the log message."},"Classes/DDAbstractLogger.html":{"name":"DDAbstractLogger","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DDLogger.html\">DDLogger</a></code> protocol specifies that an optional formatter can be added to a logger."},"Classes/DDLoggerInformation.html":{"name":"DDLoggerInformation","abstract":"<p>/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</p>"},"Classes/DDOSLogger.html":{"name":"DDOSLogger","abstract":"<p>This class provides a logger for the Apple os_log facility.</p>"},"Classes/DDTTYLogger.html":{"name":"DDTTYLogger","abstract":"<p>This class provides a logger for Terminal output or Xcode console output,"},"perloggerloglevels.html":{"name":"PerLoggerLogLevels"},"architecture.html":{"name":"Architecture"},"appcode-support.html":{"name":"AppCode-support"},"dynamicloglevels.html":{"name":"DynamicLogLevels"},"customcontext.html":{"name":"CustomContext"},"faq.html":{"name":"FAQ"},"customloglevels.html":{"name":"CustomLogLevels"},"logfilemanagement.html":{"name":"LogFileManagement"},"performance.html":{"name":"Performance"},"arc.html":{"name":"ARC"},"readme.html":{"name":"README"},"gettingstarted.html":{"name":"GettingStarted"},"finegrainedlogging.html":{"name":"FineGrainedLogging"},"customformatters.html":{"name":"CustomFormatters"},"xcodecolors.html":{"name":"XcodeColors"},"xcodetricks.html":{"name":"XcodeTricks"},"problemsolution.html":{"name":"ProblemSolution"},"customloggers.html":{"name":"CustomLoggers"},"peruserloglevels.html":{"name":"PerUserLogLevels"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}